@implements IDisposable
@inherits DxBlazorCompoment<DevExpress.Ui.DxPanoramaOptions>

<div id="@Id"></div>

@functions {
	public DxPanorama() : base("DxPanorama") { }
	protected override DevExpress.Ui.DxPanoramaOptions CreateOptions() {
		return new DevExpress.Ui.DxPanoramaOptions {
			focusStateEnabled = focusStateEnabled,
			selectedIndex = selectedIndex,
			title = title,
		};
	}
	protected override void Init(DevExpress.Ui.DxPanoramaOptions options) {
		DxPanoramaInterop.Init(Id, options);
	}
	bool? focusStateEnabled;
	public bool? FocusStateEnabled {
		get => isInitialized ? DxPanoramaInterop.GetFocusStateEnabled(Id) : focusStateEnabled;
		set {
			if (isInitialized) {
				DxPanoramaInterop.SetFocusStateEnabled(Id, value);
			} else {
				this.focusStateEnabled = value;
			}
		}
	}
	float? selectedIndex;
	public float? SelectedIndex {
		get => isInitialized ? DxPanoramaInterop.GetSelectedIndex(Id) : selectedIndex;
		set {
			if (isInitialized) {
				DxPanoramaInterop.SetSelectedIndex(Id, value);
			} else {
				this.selectedIndex = value;
			}
		}
	}
	string title;
	public string Title {
		get => isInitialized ? DxPanoramaInterop.GetTitle(Id) : title;
		set {
			if (isInitialized) {
				DxPanoramaInterop.SetTitle(Id, value);
			} else {
				this.title = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
