@implements IDisposable
@inherits DxBlazorCompoment<DevExpress.Ui.DxSwitchOptions>

<div id="@Id"></div>

@functions {
	public DxSwitch() : base("DxSwitch") { }
	protected override DevExpress.Ui.DxSwitchOptions CreateOptions() {
		return new DevExpress.Ui.DxSwitchOptions {
			activeStateEnabled = activeStateEnabled,
			focusStateEnabled = focusStateEnabled,
			hoverStateEnabled = hoverStateEnabled,
			name = name,
			offText = offText,
			onText = onText,
			value = value,
		};
	}
	protected override void Init(DevExpress.Ui.DxSwitchOptions options) {
		DxSwitchInterop.Init(Id, options);
	}
	bool? activeStateEnabled;
	public bool? ActiveStateEnabled {
		get => isInitialized ? DxSwitchInterop.GetActiveStateEnabled(Id) : activeStateEnabled;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetActiveStateEnabled(Id, value);
			} else {
				this.activeStateEnabled = value;
			}
		}
	}
	bool? focusStateEnabled;
	public bool? FocusStateEnabled {
		get => isInitialized ? DxSwitchInterop.GetFocusStateEnabled(Id) : focusStateEnabled;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetFocusStateEnabled(Id, value);
			} else {
				this.focusStateEnabled = value;
			}
		}
	}
	bool? hoverStateEnabled;
	public bool? HoverStateEnabled {
		get => isInitialized ? DxSwitchInterop.GetHoverStateEnabled(Id) : hoverStateEnabled;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetHoverStateEnabled(Id, value);
			} else {
				this.hoverStateEnabled = value;
			}
		}
	}
	string name;
	public string Name {
		get => isInitialized ? DxSwitchInterop.GetName(Id) : name;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetName(Id, value);
			} else {
				this.name = value;
			}
		}
	}
	string offText;
	public string OffText {
		get => isInitialized ? DxSwitchInterop.GetOffText(Id) : offText;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetOffText(Id, value);
			} else {
				this.offText = value;
			}
		}
	}
	string onText;
	public string OnText {
		get => isInitialized ? DxSwitchInterop.GetOnText(Id) : onText;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetOnText(Id, value);
			} else {
				this.onText = value;
			}
		}
	}
	bool? value;
	public bool? Value {
		get => isInitialized ? DxSwitchInterop.GetValue(Id) : value;
		set {
			if (isInitialized) {
				DxSwitchInterop.SetValue(Id, value);
			} else {
				this.value = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
