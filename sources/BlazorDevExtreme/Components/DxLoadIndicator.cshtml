@using Microsoft.AspNetCore.Blazor.Components
@using Microsoft.AspNetCore.Blazor
@implements IDisposable
@inherits DxBlazorComponent<DevExpress.Ui.DxLoadIndicatorOptions>

<div id="@Id" ref="dxTarget"></div>

@functions {
	ElementRef dxTarget;
	public DxLoadIndicator() : base("DxLoadIndicator") { }
	protected override DevExpress.Ui.DxLoadIndicatorOptions CreateOptions() {
		return new DevExpress.Ui.DxLoadIndicatorOptions {
			indicatorSrc = indicatorSrc,
		};
	}
	protected override Task Init(DevExpress.Ui.DxLoadIndicatorOptions options) {
return 		DevExpress.Ui.DxLoadIndicatorInterop.Init(dxTarget, options);
	}
	string indicatorSrc;
	[Parameter]
	string IndicatorSrc {
		get => isInitialized ? DevExpress.Ui.DxLoadIndicatorInterop.GetIndicatorSrc(dxTarget).Result : indicatorSrc;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxLoadIndicatorInterop.SetIndicatorSrc(dxTarget, value);
			} else {
				this.indicatorSrc = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
