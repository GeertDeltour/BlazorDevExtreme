@implements IDisposable
@inherits DxBlazorCompoment<DevExpress.Ui.DxMultiViewOptions>

<div id="@Id"></div>

@functions {
	public DxMultiView() : base("DxMultiView") { }
	protected override DevExpress.Ui.DxMultiViewOptions CreateOptions() {
		return new DevExpress.Ui.DxMultiViewOptions {
			animationEnabled = animationEnabled,
			deferRendering = deferRendering,
			focusStateEnabled = focusStateEnabled,
			loop = loop,
			selectedIndex = selectedIndex,
			swipeEnabled = swipeEnabled,
		};
	}
	protected override void Init(DevExpress.Ui.DxMultiViewOptions options) {
		DevExpress.Ui.DxMultiViewInterop.Init(Id, options);
	}
	bool? animationEnabled;
	public bool? AnimationEnabled {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetAnimationEnabled(Id) : animationEnabled;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetAnimationEnabled(Id, value);
			} else {
				this.animationEnabled = value;
			}
		}
	}
	bool? deferRendering;
	public bool? DeferRendering {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetDeferRendering(Id) : deferRendering;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetDeferRendering(Id, value);
			} else {
				this.deferRendering = value;
			}
		}
	}
	bool? focusStateEnabled;
	public bool? FocusStateEnabled {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetFocusStateEnabled(Id) : focusStateEnabled;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetFocusStateEnabled(Id, value);
			} else {
				this.focusStateEnabled = value;
			}
		}
	}
	bool? loop;
	public bool? Loop {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetLoop(Id) : loop;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetLoop(Id, value);
			} else {
				this.loop = value;
			}
		}
	}
	float? selectedIndex;
	public float? SelectedIndex {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetSelectedIndex(Id) : selectedIndex;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetSelectedIndex(Id, value);
			} else {
				this.selectedIndex = value;
			}
		}
	}
	bool? swipeEnabled;
	public bool? SwipeEnabled {
		get => isInitialized ? DevExpress.Ui.DxMultiViewInterop.GetSwipeEnabled(Id) : swipeEnabled;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxMultiViewInterop.SetSwipeEnabled(Id, value);
			} else {
				this.swipeEnabled = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
