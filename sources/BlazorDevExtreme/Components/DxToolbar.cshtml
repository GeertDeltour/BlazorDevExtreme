@using Microsoft.AspNetCore.Blazor.Components
@using Microsoft.AspNetCore.Blazor
@implements IDisposable
@inherits DxBlazorCompoment<DevExpress.Ui.DxToolbarOptions>

<div id="@Id" ref="dxTarget"></div>

@functions {
	ElementRef dxTarget;
	public DxToolbar() : base("DxToolbar") { }
	protected override DevExpress.Ui.DxToolbarOptions CreateOptions() {
		return new DevExpress.Ui.DxToolbarOptions {
			menuItemTemplate = menuItemTemplate,
			renderAs = renderAs,
		};
	}
	protected override void Init(DevExpress.Ui.DxToolbarOptions options) {
		DevExpress.Ui.DxToolbarInterop.Init(dxTarget, options);
	}
	object menuItemTemplate;
	[Parameter]
	object MenuItemTemplate {
		get => isInitialized ? DevExpress.Ui.DxToolbarInterop.GetMenuItemTemplate(dxTarget) : menuItemTemplate;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxToolbarInterop.SetMenuItemTemplate(dxTarget, value);
			} else {
				this.menuItemTemplate = value;
			}
		}
	}
	string renderAs;
	[Parameter]
	string RenderAs {
		get => isInitialized ? DevExpress.Ui.DxToolbarInterop.GetRenderAs(dxTarget) : renderAs;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxToolbarInterop.SetRenderAs(dxTarget, value);
			} else {
				this.renderAs = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
