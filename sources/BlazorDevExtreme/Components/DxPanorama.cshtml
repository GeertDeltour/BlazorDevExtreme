@using Microsoft.AspNetCore.Blazor.Components
@using Microsoft.AspNetCore.Blazor
@implements IDisposable
@inherits DxBlazorComponent<DevExpress.Ui.DxPanoramaOptions>

<div id="@Id" ref="dxTarget"></div>

@functions {
	ElementRef dxTarget;
	public DxPanorama() : base("DxPanorama") { }
	protected override DevExpress.Ui.DxPanoramaOptions CreateOptions() {
		return new DevExpress.Ui.DxPanoramaOptions {
			backgroundImage = backgroundImage,
			focusStateEnabled = focusStateEnabled,
			selectedIndex = selectedIndex,
			title = title,
		};
	}
	protected override Task Init(DevExpress.Ui.DxPanoramaOptions options) {
return 		DevExpress.Ui.DxPanoramaInterop.Init(dxTarget, options);
	}
	object backgroundImage;
	[Parameter]
	object BackgroundImage {
		get => isInitialized ? DevExpress.Ui.DxPanoramaInterop.GetBackgroundImage(dxTarget).Result : backgroundImage;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxPanoramaInterop.SetBackgroundImage(dxTarget, value);
			} else {
				this.backgroundImage = value;
			}
		}
	}
	bool? focusStateEnabled;
	[Parameter]
	bool? FocusStateEnabled {
		get => isInitialized ? DevExpress.Ui.DxPanoramaInterop.GetFocusStateEnabled(dxTarget).Result : focusStateEnabled;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxPanoramaInterop.SetFocusStateEnabled(dxTarget, value);
			} else {
				this.focusStateEnabled = value;
			}
		}
	}
	float? selectedIndex;
	[Parameter]
	float? SelectedIndex {
		get => isInitialized ? DevExpress.Ui.DxPanoramaInterop.GetSelectedIndex(dxTarget).Result : selectedIndex;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxPanoramaInterop.SetSelectedIndex(dxTarget, value);
			} else {
				this.selectedIndex = value;
			}
		}
	}
	string title;
	[Parameter]
	string Title {
		get => isInitialized ? DevExpress.Ui.DxPanoramaInterop.GetTitle(dxTarget).Result : title;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxPanoramaInterop.SetTitle(dxTarget, value);
			} else {
				this.title = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public void Dispose() {
	}
}
