@using Microsoft.AspNetCore.Blazor.Components
@using Microsoft.AspNetCore.Blazor
@implements IDisposable
@inherits DxBlazorComponent<DevExpress.Ui.DxDropDownBoxOptions>

<div id="@Id" ref="dxTarget"></div>

@functions {
	ElementRef dxTarget;
	public DxDropDownBox() : base("DxDropDownBox") { }
	protected override DevExpress.Ui.DxDropDownBoxOptions CreateOptions() {
		return new DevExpress.Ui.DxDropDownBoxOptions {
			acceptCustomValue = acceptCustomValue,
			contentTemplate = contentTemplate,
			dropDownOptions = dropDownOptions,
			fieldTemplate = fieldTemplate,
			valueChangeEvent = valueChangeEvent,
		};
	}
	protected override Task Init(DevExpress.Ui.DxDropDownBoxOptions options) {
return 		DevExpress.Ui.DxDropDownBoxInterop.Init(dxTarget, options);
	}
	bool? acceptCustomValue;
	[Parameter]
	bool? AcceptCustomValue {
		get => isInitialized ? DevExpress.Ui.DxDropDownBoxInterop.GetAcceptCustomValue(dxTarget).Result : acceptCustomValue;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxDropDownBoxInterop.SetAcceptCustomValue(dxTarget, value);
			} else {
				this.acceptCustomValue = value;
			}
		}
	}
	object contentTemplate;
	[Parameter]
	object ContentTemplate {
		get => isInitialized ? DevExpress.Ui.DxDropDownBoxInterop.GetContentTemplate(dxTarget).Result : contentTemplate;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxDropDownBoxInterop.SetContentTemplate(dxTarget, value);
			} else {
				this.contentTemplate = value;
			}
		}
	}
	object dropDownOptions;
	[Parameter]
	object DropDownOptions {
		get => isInitialized ? DevExpress.Ui.DxDropDownBoxInterop.GetDropDownOptions(dxTarget).Result : dropDownOptions;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxDropDownBoxInterop.SetDropDownOptions(dxTarget, value);
			} else {
				this.dropDownOptions = value;
			}
		}
	}
	object fieldTemplate;
	[Parameter]
	object FieldTemplate {
		get => isInitialized ? DevExpress.Ui.DxDropDownBoxInterop.GetFieldTemplate(dxTarget).Result : fieldTemplate;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxDropDownBoxInterop.SetFieldTemplate(dxTarget, value);
			} else {
				this.fieldTemplate = value;
			}
		}
	}
	string valueChangeEvent;
	[Parameter]
	string ValueChangeEvent {
		get => isInitialized ? DevExpress.Ui.DxDropDownBoxInterop.GetValueChangeEvent(dxTarget).Result : valueChangeEvent;
		set {
			if (isInitialized) {
				DevExpress.Ui.DxDropDownBoxInterop.SetValueChangeEvent(dxTarget, value);
			} else {
				this.valueChangeEvent = value;
			}
		}
	}
	protected override async Task OnInitAsync() {
		await base.OnInitAsync();
	}
	public object GetDataSourceEx() {
		return DevExpress.Ui.DxDropDownBoxInterop.GetDataSourceEx(dxTarget).Result;
	}
	public void Dispose() {
	}
}
